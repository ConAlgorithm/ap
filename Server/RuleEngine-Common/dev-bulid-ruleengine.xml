<?xml version="1.0" encoding="UTF-8"?>
<project default="jar" name="RuleEngine">

    <property name="jarname" value="RuleEngine.jar"/>

    <property name="src.dir" value="${ruleengine.dir}/src"/>
    <property name="classes.dir" value="${ruleengine.dir}/bin"/>


    <!--第三方jar-->
    <path id="lib-classpath">
        <fileset dir="${temp.ruleengine.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
    <target name="create-out-dir">
        <mkdir dir="${output.dir}/${ruleengine.dir}"/>
    </target>

    <target name="copy" depends="create-out-dir">
        <copy todir="${temp.ruleengine.dir}" flatten="true">
            <fileset dir="${lib.dir}">
                <include name="zookeeper-3.4.6/zookeeper-3.4.6.jar"/>
                <include name="toprules/antlr-2.7.6.jar"/>
                <include name="toprules/antlr-3.3.jar"/>
                <include name="toprules/antlr-runtime-3.3.jar"/>
                <include name="toprules/bcprov-jdk14-1.38.jar"/>
                <include name="toprules/commons-lang-2.6.jar"/>
                <include name="toprules/dom4j-1.6.1.jar"/>
                <include name="toprules/drools-all-5.5.0.ht.jar"/>
                <include name="toprules/license-1.4.7.jar"/>
                <include name="toprules/slf4j-api-1.6.1.jar"/>
                <include name="toprules/slf4j-log4j12-1.6.1.jar"/>
                <include name="toprules/toprules-api-2.4.5.jar"/>
                <include name="toprules/toprules-client-api-2.4.5.jar"/>
                <include name="toprules/toprules-common-2.4.7.jar"/>
                <include name="google/gson-2.2.4.jar"/>
                <include name="log4j/log4j-1.2.17.jar"/>
                <include name="spring/spring-jdbc-4.0.5.RELEASE.jar"/>
                <include name="spring/spring-beans-4.0.5.RELEASE.jar"/>
                <include name="spring/spring-tx-4.0.5.RELEASE.jar"/>
                <include name="spring/spring-core-4.0.5.RELEASE.jar"/>
                <include name="toprules/c3p0-0.9.1.2.jar"/>
                <include name="jdbc/mysql-connector-java-5.1.9.jar"/>
                <include name="dom4j/dom4j-1.6.1.jar"/>
                <include name="jetty/9.2.11/jetty-http-9.2.11.v20150529.jar"/>
                <include name="jetty/9.2.11/jetty-io-9.2.11.v20150529.jar"/>
                <include name="jetty/9.2.11/jetty-server-9.2.11.v20150529.jar"/>
                <include name="jetty/9.2.11/jetty-util-9.2.11.v20150529.jar"/>
                <include name="jetty/9.2.11/servlet-api-3.1.jar"/>
                <include name="apache/commons-io-2.4.jar"/>
                <include name="slf4j-api-1.7.7.jar"/>
                <include name="google/guava-14.0.jar"/>
                <include name="jdbc/bonecp-0.7.1.RELEASE.jar"/>
                <include name="jdbc/sqljdbc4.jar"/>
                <include name="mongo/mongo-java-driver-2.12.4.jar"/>
                <include name="joda/joda-time-2.5.jar"/>
                <include name="aliyun/ons/fastjson-1.1.41.jar"/>
                <include name="aliyun/ons/netty-all-4.0.21.Final.jar"/>
                <include name="aliyun/ons/ons-api-1.1.4.jar"/>
                <include name="aliyun/ons/ons-client-1.1.4.jar"/>
                <include name="aliyun/ons/rocketmq-client-3.2.1.jar"/>
                <include name="aliyun/ons/rocketmq-common-3.2.1.jar"/>
                <include name="aliyun/ons/rocketmq-remoting-3.2.1.jar"/>
                <include name="csv/javacsv.jar"/>
                <include name="toprules/toprules-engine-2.4.7.jar"/>
                <include name="jaxrs-ri-2.17/api/javax.ws.rs-api-2.0.1.jar"/>
                <include name="jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar"/>
                <include name="jackson/jackson-jaxrs/1.9.13/jackson-jaxrs-1.9.13.jar"/>
                <include name="jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar"/>
                <include name="jersey/jersey-container-jetty-http-2.9.1.jar"/>
                <include name="jersey/jersey-jetty-1.0.1.jar"/>
                <include name="jaxrs-ri-2.17/lib/jersey-server.jar"/>
                <include name="jaxrs-ri-2.17/lib/jersey-client.jar"/>
                <include name="jaxrs-ri-2.17/lib/jersey-common.jar"/>
                <include name="jaxrs-ri-2.17/lib/jersey-container-servlet.jar"/>
                <include name="jaxrs-ri-2.17/lib/jersey-container-servlet-core.jar"/>
                <include name="jaxrs-ri-2.17/lib/jersey-media-jaxb.jar"/>
                <include name="jaxrs-ri-2.17/lib/jersey-proxy-client-2.21.jar"/>
                <include name="jaxrs-ri-2.17/ext/hk2-api-2.4.0-b10.jar"/>
                <include name="jaxrs-ri-2.17/ext/jersey-guava-2.17.jar"/>
                <include name="jaxrs-ri-2.17/ext/javax.inject-2.4.0-b10.jar"/>
                <include name="jaxrs-ri-2.17/ext/hk2-locator-2.4.0-b10.jar"/>
                <include name="jaxrs-ri-2.17/ext/javax.annotation-api-1.2.jar"/>
                <include name="jaxrs-ri-2.17/ext/hk2-utils-2.4.0-b10.jar"/>
            </fileset>
            <fileset dir="${framework.lib.dir}">
               <!-- <include name="FrameworkBase/FrameworkBase.jar"/>-->
                <include name="CatfishServer.jar"/>
                <include name="CatfishServices/CatfishServices.jar"/>
            </fileset>
            <fileset dir="${output.dir}">
                <include name="CatfishBase.jar" />
            </fileset>
        </copy>
        <echo level="info">拷贝RuleEngine依赖包完毕......</echo>
    </target>

    <!--编译 -->
    <target name="compile" depends="copy">
        <javac target="1.7" srcdir="${src.dir}" destdir="${classes.dir}" sourcepath = "" includeantruntime="true" >
            <compilerarg line="-encoding UTF-8"/>
            <classpath refid="lib-classpath"/>
        </javac>
        <echo>编译RuleEngine成功......</echo>
    </target>

    <!--打包jar文件 -->
    <target name="jar" depends="compile" description="jar taget">
        <!--构造打包时Class-Path需要的路径, pathsep是分隔符 -->
        <pathconvert property="libs" pathsep=" ">
            <mapper>
                <chainedmapper>
                    <flattenmapper />
                    <!--  <globmapper from="*" to="lib/*" /> -->
                </chainedmapper>
            </mapper>
            <!--按照mapper定义的格式组合lib目录下面的所有jar文件，形成诸如lib/jar1.jar lib/jar2.jar的字符串-->
            <fileset dir="${temp.ruleengine.dir}">
                <include name="*.jar" />
            </fileset>
        </pathconvert>
        <jar destfile="${output.dir}/${ruleengine.dir}/${jarname}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader"/>
                <attribute name="Rsrc-Main-Class" value="engine.main.Driver"/>
                <attribute name="Class-Path" value="."/>
                <attribute name="Rsrc-Class-Path" value="./ ${libs}"/>
            </manifest>
            <zipfileset src="${lib.dir}/jar-in-jar-loader.zip"/>
            <zipfileset dir="${temp.ruleengine.dir}" includes="*.jar"/>
        </jar>
    </target>

    <target name="outputrulesxml" depends="jar">
        <copy todir="${output.dir}/${ruleengine.dir}" flatten="true">
            <fileset dir="${ruleengine.dir}">
                <include name="*.xml"/>
            </fileset>
        </copy>
    </target>
    <target name="outputrulesconfig" depends="outputrulesxml">
        <copy todir="${output.dir}/${ruleengine.dir}/config">
            <fileset dir="${ruleengine.dir}/config">
                <include name="*"/>
            </fileset>
        </copy>
    </target>
</project>